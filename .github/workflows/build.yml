name: Build

on: [push,pull_request,workflow_dispatch]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
       matrix:
         os: [ubuntu-latest, windows-latest, macos-latest]
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: ubuntu-dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install xorg-dev libglu1-mesa-dev libboost-all-dev libgmp-dev  libmpfr-dev 
        sudo apt-get install -y gcc-10 g++-10
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
          --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10

    - name: macos-dependencies
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install boost mpfr

    - name: windows-dependencies
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install boost-msvc-14.3

    - name: dependencies
      run: |
        cmake -E make_directory ${{ github.workspace }}/build
    
    - name: configure cmake windows
      if: startsWith(matrix.os, 'windows')
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBOOST_ROOT=C:/local/boost_1_80_0

    - name: configure cmake non-windows
      if: startsWith(matrix.os, 'windows') != true
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: build
      working-directory: ${{ github.workspace }}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

